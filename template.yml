# This is the SAM template that represents the architecture of your serverless application
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-basics.html

# The AWSTemplateFormatVersion identifies the capabilities of the template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/format-version-structure.html
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  SNS-Pulish-Function

# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform:
- AWS::Serverless-2016-10-31
Parameters:
    SNSTopicName:
        Type: String
        Description: Please enter your SNS Topic Name. (SNS Topic must exist in the same region where this stack is launched).

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  # This is an SNS Topic with all default configuration properties. To learn more about the available options, see
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-topic.html
  # SNSPublishMessagePolicy:
  #   Statement:
  #     - Effect: Allow
  #       Action:
  #         - sns:Publish
  #       Resource:
  #         Fn::Sub:
  #           - arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:${topicName}
  #           - topicName:
  #             Ref: TopicName
  LambdaExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: "sts:AssumeRole"
  LambdaGroupPolicies: 
    Type: "AWS::IAM::Policy"
    Properties: 
      PolicyName: "SnsPublishPolicies"
      PolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - Sid: SNSLogPolicy
            Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: 
              Fn::Join:
                - "" 
                - - "arn:aws:logs:"
                  - !Ref "AWS::Region"
                  - ":"
                  - !Ref "AWS::AccountId"
                  - ":*"
          - Sid: SNSPulishPolicy
            Effect: Allow
            Action:
              - sns:Publish
            Resource: 
              Fn::Join:
                - "" 
                - - "arn:aws:sns:"
                  - !Ref "AWS::Region"
                  - ":"
                  - !Ref "AWS::AccountId"
                  - ":"
                  - !Ref "SNSTopicName"
      Roles: 
        - Ref: "LambdaExecutionRole"
      

        # Statement: 
        #   - 
        #     Sid: Stmt1477516473539
        #     Action:
        #       - logs:CreateLogGroup
        #       - logs:CreateLogStream
        #       - logs:PutLogEvents
        #     Effect: Allow
        #     Resource: arn:aws:logs:*:*:*
        #   - 
        #     Sid: Stmt1484080345748
        #     Action:
        #       - sns:Publish
        #     Effect: Allow
        #     Resource: 
        #       Fn::Join:
        #         - "" 
        #         - - "arn:aws:sns:"
        #           - !Ref "AWS::Region"
        #           - ":"
        #           - !Ref "AWS::AccountId"
        #           - ":"
        #           - !Ref "SNSTopicName"
  SNSPulishFunction:
    Type: AWS::Serverless::Function
    Properties:
      Role: 
        Fn::GetAtt:
          - "LambdaExecutionRole"
          - "Arn"
      # Environment: 
      #   Variables: 
      #     SNSARN: 
      #       Fn::Join:
      #         - "" 
      #         - - "arn:aws:sns:"
      #           - !Ref "AWS::Region"
      #           - ":"
      #           - !Ref "AWS::AccountId"
      #           - ":"
      #           - !Ref "SNSTopicName"
      Description: A Lambda function that logs the payload of messages sent to an associated SNS topic.
      Runtime: nodejs12.x
      Handler: src/handlers/push.snsPulishHandler
      MemorySize: 128
      Timeout: 25
      # Policies:
      #   # Give Lambda basic execution Permission to the helloFromLambda
      #   - AWSLambdaSNSPublishPolicyExecutionRole
      
      